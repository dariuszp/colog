{"name":"Colog","tagline":"colog - console.log with colors for Node.js","body":"#colog [![Build Status](https://travis-ci.org/dariuszp/colog.png?branch=1.0.0)](https://travis-ci.org/dariuszp/colog)\r\n\r\n###Installation\r\n\r\nIf you have Node.js and npm (Node Package Manager) installed, simply open console and type\r\n\r\n```Shell\r\nnpm install colog\r\n```\r\n\r\n###Usage\r\n\r\nTo use colog, add it to your project file\r\n\r\n```JavaScript\r\nvar colog = require('colog');\r\n```\r\n\r\nThen you can start creating colorful output for your console:\r\n\r\n```JavaScript\r\ncolog.success('Up and running');\r\n```\r\n\r\nIf you did everything right, after you start your program like this:\r\n\r\n```Shell\r\nnode myApplication.js\r\n```\r\n\r\nYou should see green text \"Up and running\";\r\n\r\nFor more informations check [Wiki](https://github.com/dariuszp/colog/wiki) page for this project\r\n\r\n##Cheatsheet\r\n\r\n####Predefined options:\r\n\r\n```JavaScript\r\ncolog.question('How are you ?');\r\n```\r\n\r\n*Full list*\r\n* info() - white text\r\n* success() - green text\r\n* warning() - yellow text\r\n* error() - red text\r\n* question() - cyan text\r\n* answer() - magenta text\r\n* headerInfo() - black text, white background\r\n* headerSuccess() - white text, green background\r\n* headerWarning() - black text, yellow background\r\n* headerError() - white text, red background\r\n* headerQuestion() - white text, cyan background\r\n* headerAnswer() - white text, magenta background\r\n\r\n####Applying colors, effects or background:\r\n\r\n```JavaScript\r\ncolog.log(colog.colorGreen('My text'));\r\ncolog.log(colog.backgroundGreen('My text'));\r\n```\r\n\r\n*Available effects:*\r\n* bold()\r\n* underline()\r\n* strike() (draw line on the text)\r\n* inverse() (change background color with text color and vice versa)\r\n\r\nAlso you can use .b(), .u(), .s() and .i() etc.\r\n\r\n*Available colors:*\r\n* black()\r\n* red()\r\n* green()\r\n* yellow()\r\n* blue()\r\n* magenta()\r\n* cyan()\r\n* white()\r\n\r\nAlso you can use .colorBlack() instead of .black()\r\n\r\n*Available backgrounds:*\r\n* bgBlack()\r\n* bgRed()\r\n* bgGreen()\r\n* bgYellow()\r\n* bgBlue()\r\n* bgMagenta()\r\n* bgCyan()\r\n* bgWhite()\r\n\r\nAlso you can use for example backgroundRed() instead of bgRed()\r\n\r\n*Others:*\r\n\r\n.nl() is alias for .newLine(). You get the point.\r\n\r\n####Combining multiple effects:\r\n\r\n```JavaScript\r\ncolog.log(colog.underscore(colog.colorRed('My text')));\r\ncolog.log(colog.apply('My text', ['underscore', 'colorRed']));\r\ncolog.log(colog.color('My text', 'red') + colog.color('My text', 'green'));\r\ncolog.format('<question>How are you ?</question>');\r\ncolog.format('colog.format(<bold><colorRed>This</colorRed></bold> <underline><yellow>is</yellow></underline> <green>SPARTA</green><inverse>!</inverse>);');\r\ncolog.log(colog.format('<question>How are you ?</question>', false));\r\n```\r\n\r\n*All options that can be used as tags:*\r\nbold, underline, strike, inverse, colorBlack, colorRed, colorGreen, colorYellow, colorBlue, colorMagenta, colorCyan, colorWhite, backgroundBlack, backgroundRed, backgroundGreen, backgroundYellow, backgroundBlue, backgroundMagenta, backgroundCyan, backgroundWhite\r\n\r\n*Also:*\r\nnow you can use short names like \"black\", \"bgGreen\" etc. Same as methods listed above\r\n\r\n## Progress bar\r\n\r\nTo init a progress bar with 1000 steps that is charged 50% (5000 steps) just use:\r\n\r\n```JavaScript\r\ncolog.progress(5000, 10000);\r\n```\r\n\r\nNow you can advance progress bar by .progress() method with one or no arguments:\r\n\r\n```JavaScript\r\ncolog.progress(); // will add one step to progress bar\r\ncolog.progress(5); // will add 5 steps\r\n```\r\n\r\n## Formating output\r\n\r\nNow .format() method allow You to combine string with arguments just like .format() method from Node.js Util library\r\n\r\n```JavaScript\r\ncolog.format('My name is %s and I\\'m %d', 'Earl', 45);\r\n```\r\n\r\n## Status\r\n\r\nSometimes you want some description with status. This will print message on the left side of the screen and status on the right side.\r\nScript will measure size of your terminal and match position of both strings.\r\n\r\n```JavaScript\r\ncolog.status('Module message', '[OK]');\r\ncolog.status('Module <b>message</b>', '<b>[OK]</b>');\r\n```\r\n\r\nIf script will be unable to check size of TTY, default cols will be used.\r\n\r\n## Silent mode\r\n\r\nSometimes you want Your colog to just shut up. You can do that using silent mode:\r\n\r\n```JavaScript\r\ncolog.silent(true);\r\ncolog.silent(false);\r\n```\r\n\r\n## Dumping stuff\r\n\r\nYou can dump variables and functions at any point and apply effects to them.\r\n\r\n```JavaScript\r\ncolog.dump(variable);\r\ncolog.dump(variable, ['red', 'bgGreen']);\r\n```\r\n\r\n##Example output\r\n\r\n![Example](https://raw.github.com/dariuszp/colog/master/docs/colog.png)\r\n\r\nAuthor: Półtorak Dariusz <poltorak.dariusz@gmail.com>\r\nLicense: [MIT](http://opensource.org/licenses/MIT)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}